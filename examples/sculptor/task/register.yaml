version: "3"

includes:
  template:face:
    taskfile: template.yaml
    vars:
      COMPONENT: face
  template:skull:
    taskfile: template.yaml
    vars:
      COMPONENT: skull

tasks:
  CT-to-mesh:
    cmds:
      - cmd: rm --force --recursive "CT_to_mesh/{{.COMPONENT}}"
        silent: true
      - cmd: mkdir --parents "CT_to_mesh/{{.COMPONENT}}"
        silent: true
      - python "{{.ROOT_DIR}}/cmd/CT_to_mesh.py" --component="{{.COMPONENT}}" --record="CT_to_mesh/{{.COMPONENT}}" "00-CT.nrrd" "01-{{.COMPONENT}}.ply"
    sources:
      - "{{.ROOT_DIR}}/cmd/CT_to_mesh.py"
      - 00-CT.nrrd
    generates:
      - 01-{{.COMPONENT}}.ply
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  simplify:
    cmds:
      - python "{{.ROOT_DIR}}/cmd/simplify.py" --face-count="{{.FACE_COUNT}}" "01-{{.COMPONENT}}.ply" "02-{{.COMPONENT}}.ply"
    deps:
      - task: CT-to-mesh
    sources:
      - "{{.ROOT_DIR}}/cmd/simplify.py"
      - 01-{{.COMPONENT}}.ply
    generates:
      - 02-{{.COMPONENT}}.ply
    vars:
      FACE_COUNT: -1
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  annotate-landmarks:
    deps:
      - task: simplify
    sources:
      - 02-{{.COMPONENT}}.ply
    generates:
      - 02-{{.COMPONENT}}-landmarks.txt
    preconditions:
      - test -s "02-{{.COMPONENT}}-landmarks.txt"
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  view-landmarks:
    cmds:
      - python "{{.ROOT_DIR}}/cmd/view_landmarks.py" "02-{{.COMPONENT}}.ply"
    deps:
      - task: annotate-landmarks
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"
    interactive: true

  align:
    cmds:
      - python "{{.ROOT_DIR}}/cmd/align.py" --output="03-{{.COMPONENT}}.ply" "/{{.DATA_DIR}}/template/03-{{.COMPONENT}}.ply" "02-{{.COMPONENT}}.ply"
    deps:
      - task: template:{{.COMPONENT}}:annotate-landmarks
      - task: annotate-landmarks
    sources:
      - "{{.ROOT_DIR}}/cmd/align.py"
      - "/{{.DATA_DIR}}/template/03-{{.COMPONENT}}.ply"
      - "/{{.DATA_DIR}}/template/03-{{.COMPONENT}}-landmarks.txt"
      - 02-{{.COMPONENT}}.ply
      - 02-{{.COMPONENT}}-landmarks.txt
    generates:
      - 03-{{.COMPONENT}}.ply
      - 03-{{.COMPONENT}}-landmarks.txt
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  register:
    cmds:
      - cmd: rm --force --recursive "register/{{.COMPONENT}}"
        silent: true
      - cmd: mkdir --parents "register/{{.COMPONENT}}"
        silent: true
      - python "{{.ROOT_DIR}}/cmd/register.py" --output="04-{{.COMPONENT}}.ply" --record="register/{{.COMPONENT}}" "03-{{.COMPONENT}}.ply" "02-{{.COMPONENT}}.ply"
    deps:
      - task: align
    sources:
      - "{{.ROOT_DIR}}/cmd/register.py"
      - 03-{{.COMPONENT}}.ply
      - 03-{{.COMPONENT}}-landmarks.txt
      - 02-{{.COMPONENT}}.ply
      - 02-{{.COMPONENT}}-landmarks.txt
    generates:
      - 04-{{.COMPONENT}}.ply
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  check:
    cmds:
      - tetgen -p -Y -q -A -O -z -V -d -N -E -F "04-{{.COMPONENT}}.ply"
    deps:
      - task: register
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"

  compare:
    cmds:
      - meshlab "04-{{.COMPONENT}}.ply" "02-{{.COMPONENT}}.ply"
    deps:
      - task: register
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"
    interactive: true

  view-records:
    cmds:
      - python "{{.ROOT_DIR}}/cmd/view_records.py" "register/{{.COMPONENT}}" "02-{{.COMPONENT}}.ply"
    deps:
      - task: register
    requires:
      vars:
        - COMPONENT
        - DATA_DIR
        - STAGE
        - TARGET
    dir: "/{{.DATA_DIR}}/{{.TARGET}}/{{.STAGE}}"
    interactive: true

run: once
